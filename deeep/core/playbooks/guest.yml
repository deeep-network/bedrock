---
- name: Guest - Manage Services
  hosts: localhost
  gather_facts: true
  become: true
  become_user: nerdnode
  become_flags: "-i"
  vars:
    hab_sup_api_url: http://localhost:9631/services
    services_api_url: https://beta.deeep.network/api/v1/vm/{{ ansible_nodename }}/services
  tasks:
    - name: Ensure running on VM
      ansible.builtin.assert:
        that: ansible_virtualization_role == 'guest'

    - name: Fetch required services from API
      ansible.builtin.uri:
        url: "{{ services_api_url }}"
        method: GET
        return_content: true
      register: requirements_response

    - name: Get running services from Habitat Supervisor
      ansible.builtin.uri:
        url: "{{ hab_sup_api_url }}"
        method: GET
        return_content: true
      register: hab_services_response

    - name: Set lists for comparison
      ansible.builtin.set_fact:
        required_services: |
          {{
            requirements_response.get('json', {}).get('data', []) |
            map('dict2items') | map('first') |
            map(attribute='key')
          }}
        running_services: |
          {{
            hab_services_response.get('json', {}) |
            selectattr('service_group', 'contains', '.services') |
            map(attribute='pkg.name') |
            list
          }}

    - name: Determine services to load/unload
      ansible.builtin.set_fact:
        services_to_load: "{{ required_services | difference(running_services) }}"
        services_to_unload: "{{ running_services | difference(required_services) }}"

    - name: Start services
      vars:
        service_cmd: start
        service_name: "{{ item }}"
      when: services_to_load | length > 0
      ansible.builtin.include_role:
        name: deeep.core.service
      loop: "{{ services_to_load }}"

    - name: Stop services
      vars:
        service_cmd: stop
        service_name: "{{ item }}"
      when: services_to_unload | length > 0
      ansible.builtin.include_role:
        name: deeep.core.service
      loop: "{{ services_to_unload }}"

    - name: Check statuses
      when:
        - required_services | length > 0
        - services_to_load | length == 0
      ansible.builtin.include_role:
        name: deeep.core.service
      loop: "{{ services_to_unload }}"
