name: release

on:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_USER: ${{ github.actor }}

permissions:
  contents: write
  packages: read

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.next }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      # calculate the bedrock release version
      - name: Get next version
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: main
          majorList: 'major'
          patchList: 'fix, perf'
          skipInvalidTags: true

  setup:
    needs: [version]
    runs-on: ubuntu-latest
    outputs:
      collections: ${{ steps.directories.outputs.dirs }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit
          
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
        
      - id: directories
        run: |
          dirs=$(find . -type f -name '*galaxy.yml' |
            sed -r 's|/[^/]+$||' |
            jq --raw-input --slurp --compact-output 'split("\n")[:-1]')
          echo "Found directories: $dirs"
          echo "dirs=$dirs" >> ${GITHUB_OUTPUT}

  build:
    needs: [setup]
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        dir: ${{ fromJson(needs.setup.outputs.collections) }}
    env:
      ANSIBLE_SIGN_GPG_PASSPHRASE: ${{ secrets.ANSIBLE_SIGN_GPG_PASSPHRASE }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit
          
      - name: Install YQ
        uses: dcarbone/install-yq-action@4075b4dca348d74bd83f2bf82d30f25d7c54539b # v1.3.1
        with:
          version: v4.44.3
          force: true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
            fetch-depth: 0
            clean: true

      - name: Get versio
        uses: chaaz/versio-actions/install@v1.3

      # using versio we figure out what version each collection should be
      # this version is independent of the bedrock released version
      - name: Update Ansible Collections
        run: versio release

      - name: Create artifacts directory
        run: mkdir artifacts

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5 # v6.2.0
        id: gpg-signing-key
        with:
          gpg_private_key: ${{ secrets.GPG_SIGNING_KEY }}
          passphrase: ${{ secrets.ANSIBLE_SIGN_GPG_PASSPHRASE }}

      - name: Export GPG public key
        run: |
          gpg --armor --export --output='./artifacts/pubkey.gpg' ${{ steps.gpg-signing-key.outputs.name }}

      - name: Install ansible-sign
        run: pipx install ansible-sign==0.1.1

      - name: Install ansible-core
        run: pipx install ansible-core==2.17.1

      - name: Sign collection
        working-directory: ${{ matrix.dir }}
        run: ansible-sign project gpg-sign .

      - name: Build collection
        working-directory: ${{ matrix.dir }}
        run: |
          ansible-galaxy collection build --output-path='${GITHUB_WORKSPACE}/artifacts'

      - name: Get collection name
        id: collection
        run: |
          echo "name=$(echo ${{ matrix.dir }} | tr / . | sed -E 's/\.\.+//g')" >> $GITHUB_OUTPUT

      - name: Retrieve requirements.yml
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        if: strategy.job-index != 0
        continue-on-error: true
        with:
          name: requirements-yml

      - name: Update requirements file
        run: >-
          export NAME=$(basename $(find ./artifacts -name '*.tar.gz'));
          yq -i '([{"name": strenv(NAME)}] + .collections | unique_by(.name)) as $uniq | .collections = $uniq'
          requirements.yml || yq -n '.collections += [{"name": strenv(NAME)}]' > requirements.yml

      - name: Upload requirements file
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: requirements-yml
          path: ./requirements.yml
          overwrite: true

      - name: Upload artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: ${{ steps.collection.outputs.name }}
          path: ./artifacts/

  package:
    runs-on: ubuntu-latest
    needs: [build, version]
    permissions:
      contents: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: ansible-collections
          delete-merged: true
          
      - name: Retrieve Artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        id: release-artifacts
        with:
          name: ansible-collections
          
      - name: Zip artifact for release
        run: zip ansible-collections.zip ./* -r

      - name: Debugging
        run: echo "${{ needs.version.outputs.version }}"

      - name: Create Release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          tag_name: ${{ needs.version.outputs.version }}
          name: ${{ needs.version.outputs.version }}
          files: ansible-collections.zip
          make_latest: true
          generate_release_notes: true
