name: release

on:
  workflow_dispatch:
  push:
    tags:
    - "v*.*.*"

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      collections: ${{ steps.directories.outputs.dirs }}
    steps:
      - 
        name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
      -
        name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      -
        id: directories
        run: |
          echo "dirs=$(
            find . -type f -name '*galaxy.yml' |
            sed -r 's|/[^/]+$||' |
            jq --raw-input --slurp --compact-output 'split("\n")[:-1]'
          )" >> ${GITHUB_OUTPUT}

  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        dir: ${{ fromJson(needs.setup.outputs.collections) }}
    env:
      ANSIBLE_SIGN_GPG_PASSPHRASE: ${{ secrets.ANSIBLE_SIGN_GPG_PASSPHRASE }}
    steps:
      -
        name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
      -
        name: Install YQ
        uses: dcarbone/install-yq-action@64b1b9eb28920bb1a4c13c05321df284f9a8f940 # v1.1.1
        with:
          version: v4.44.3
          force: true
      -
        name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      -
        name: Create artifacts directory
        run: |
          mkdir artifacts
      -
        name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4 # v6.1.0
        id: gpg-signing-key
        with:
          gpg_private_key: ${{ secrets.GPG_SIGNING_KEY }}
          passphrase: ${{ secrets.ANSIBLE_SIGN_GPG_PASSPHRASE }}
      -
        name: Export GPG public key
        run: |
          gpg --armor --export --output='./artifacts/pubkey.gpg' ${{ steps.gpg-signing-key.outputs.name }}
      -
        name: Install ansible-sign
        run: pipx install ansible-sign==0.1.1
      -
        name: Install ansible-core
        run: pipx install ansible-core==2.17.1
      -
        name: Sign collection
        working-directory: ${{ matrix.dir }}
        run: |
          ansible-sign project gpg-sign .
      - 
        name: Build collection
        working-directory: ${{ matrix.dir }}
        run: |
          ansible-galaxy collection build --output-path='${GITHUB_WORKSPACE}/artifacts'
      -
        name: Get collection name
        id: collection
        run: |
          echo "name=$(echo ${{ matrix.dir }} | tr / . | sed -E 's/\.\.+//g')" >> $GITHUB_OUTPUT
      -
        name: Retrieve requirements.yml
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        if: strategy.job-index != 0
        continue-on-error: true
        with:
          name: requirements-yml
      -
        name: Update requirements file
        run: >-
          export NAME=$(basename $(find ./artifacts -name '*.tar.gz'));
          yq -i '([{"name": strenv(NAME)}] + .collections | unique_by(.name)) as $uniq | .collections = $uniq'
          requirements.yml || yq -n '.collections += [{"name": strenv(NAME)}]' > requirements.yml
      -
        name: Upload requirements file
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: requirements-yml
          path: ./requirements.yml
          overwrite: true
      -
        name: Upload artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ${{ steps.collection.outputs.name }}
          path: ./artifacts/

  package:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: build
    permissions:
      contents: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - 
        name: Merge Artifacts
        uses: actions/upload-artifact/merge@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ansible-collections
          delete-merged: true
      -
        name: Retrieve Artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        id: release-artifacts
        with:
          name: ansible-collections
      - 
        name: Zip artifact for release
        run: zip ansible-collections.zip ./* -r
      -
        name: Release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2.0.8
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ansible-collections.zip
          make_latest: false
          generate_release_notes: true
