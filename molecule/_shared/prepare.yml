---
- name: Prepare
  hosts: molecule
  gather_facts: true
  vars:
    hostname: "{{ vm_hostname | default(lookup('pipe', 'hostname -s')) | split('.') | first }}"
    vm_id: "{{ hostname | split('-') | last }}"
    ipv4_address: "{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses | first) }}"
  tasks:
    ## cloud-init installs the latest signed collection via github
    # we need to make sure we install the local version for local
    # development
    - name: Build collection packages
      delegate_to: localhost
      block:
        - name: Find collections
          ansible.builtin.find:
            paths: ../../deeep
            recurse: false
            file_type: directory
          register: _collections

        - name: Ensure build directory exists
          ansible.builtin.file:
            path: "{{ playbook_dir }}/build/"
            state: "{{ item }}"
            mode: '0755'
          loop:
            - absent
            - directory

        - name: Build local collections
          ansible.builtin.command: ansible-galaxy collection build --output-path={{ playbook_dir }}/build --force
          args:
            chdir: "{{ _file['path'] }}"
          changed_when: false
          loop: "{{ _collections['files'] }}"
          loop_control:
            label: "{{ _file['path'] }}"
            loop_var: _file

        - name: Create collections list for requirements file
          vars:
            _glob: "{{ playbook_dir }}/build/*.tar.gz"
            _name: "{{ _file | basename }}"
          ansible.builtin.set_fact:
            _tarballs: "{{ _tarballs | default([]) + [{'name': _name}] }}"
          loop: "{{ query('fileglob', _glob) }}"
          loop_control:
            loop_var: _file
            label: "{{ _file | basename }}"

        - name: Create local requirements file
          vars:
            _requirements:
              collections: "{{ _tarballs }}"
          ansible.builtin.copy:
            content: "{{ _requirements | to_nice_yaml(indent=2) }}"
            dest: "{{ playbook_dir }}/build/requirements.yml"
            mode: '0644'

    - name: Ensure collection directory exists
      become: true
      ansible.builtin.file:
        path: /opt/deeep-network/bedrock/dev
        state: directory
        mode: '0755'

    - name: Copy build folder over
      vars:
        _glob: "{{ playbook_dir }}/build/*"
      become: true
      ansible.builtin.copy:
        src: "{{ _file }}"
        dest: /opt/deeep-network/bedrock/dev
        mode: '0644'
      loop: "{{ query('fileglob', _glob) }}"
      loop_control:
        loop_var: _file
        label: "{{ _file | basename }}"
