---
- name: Check user
  ansible.builtin.include_role:
    name: depin.libs.ipfs
    tasks_from: commands/user.yml

- name: Setup program
  become: true
  become_user: ipfs
  block:
    - name: Init
      ansible.builtin.command: "{{ ipfs_cluster_cli }} init http://dummy.url"
      args:
        creates: $HOME/{{ ipfs_cluster_config_dir }}/service.json
    
    - name: Get default config
      ansible.builtin.slurp:
        src: $HOME/{{ ipfs_cluster_config_dir }}/service.json
      register: _slurp_default_config

    - name: Get remote config
      become: false
      delegate_to: localhost
      when: ipfs_cluster_config_url is defined
      ansible.builtin.get_url:
        checksum: "{{ ipfs_cluster_config_checksum | default(omit) }}"
        url: "{{ ipfs_cluster_config_url }}"
        dest: /tmp
        mode: '0644'
      register: _remote_config_file

    - name: Set remote config
      when: _remote_config_file is not skipped
      ansible.builtin.set_fact:
        _remote_config: "{{ lookup('ansible.builtin.file', _remote_config_file.dest) }}"

    - name: Create custom config
      vars:
        _default_config: "{{ _slurp_default_config['content'] | b64decode }}"
        _role_default_config: "{{ lookup('ansible.builtin.template', 'templates/config.j2') }}"
      ansible.builtin.set_fact:
        _config:
          "{{ _default_config |
              combine(_remote_config | default({}), recursive=true) |
              combine(_role_default_config, recursive=true) |
              combine(ipfs_cluster_custom_config | default({}), recursive=true) |
              ansible.utils.remove_keys(target=['source'])
          }}"

    - name: Save custom config
      become_user: root
      ansible.builtin.copy:
        content: "{{ _config | to_nice_json }}"
        dest: "{{ ipfs_cluster_dir }}/service.json"
        mode: '0644'
    
    - name: Symlink modified config
      ansible.builtin.file:
        src: "{{ ipfs_cluster_dir }}/service.json"
        path: $HOME/{{ ipfs_cluster_config_dir }}/service.json
        mode: '0644'
        owner: root
        group: root
        state: link
        force: true

- name: Install systemd service
  become: true
  ansible.builtin.template:
    src: templates/systemd.service.j2
    dest: /etc/systemd/system/ipfs-cluster-{{ ipfs_cluster_type }}.service
    owner: root
    group: root
    mode: '0644'

- name: Start systemd service
  become: true
  ansible.builtin.systemd_service:
    name: ipfs-cluster-{{ ipfs_cluster_type }}
    daemon_reload: true
    enabled: true
    state: started
